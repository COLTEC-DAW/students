name: Correção

on:
  pull_request:
    types: [opened, synchronize]
  

permissions:
  checks: write
  actions: read
  contents: read
  pull-requests: write

env:
  JEKYLL_PATH: "${{ github.workspace }}/_site"

jobs:
  setup:
    name: Correção
    runs-on: self-hosted
    if: github.actor != 'github-classroom[bot]'
    steps:
      - name: Checkout 
        uses: actions/checkout@v2

      - name: Build
        run: |
          bundle install && \
          bundle exec jekyll build
  
      - name: Dependencies
        run: npm install

      - name: Test
        run: npm test
      
      # - name: Report Full
      #   uses: dorny/test-reporter@v1
      #   if: always()
      #   with:
      #     name: Relatório da Correção                  # Name of the check run which will be created
      #     path: 'reports/*.xml'                     # Path to test results (inside artifact .zip)
      #     reporter: jest-junit              # Format of test results
      #     fail-on-error: false
      #     fail-on-empty: false

      - name: Report Summary
        id: reportSummary
        uses: test-summary/action@v2
        with:
          paths: "reports/**/*.xml"
          output: "reports/summary.md"
        if: always()

      - name: Pull Request Comment
        uses: thollander/actions-comment-pull-request@v2
        with:
          filePath: "reports/summary.md"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: always()


      # - name: Caching do projeto
      #   uses: actions/cache@v2
      #   with:
      #     path: |
      #       ${{ env.JEKYLL_PATH }}/
      #       ${{ github.workspace }}/tests/
      #       ${{ github.workspace }}/node_modules/
      #       ${{ github.workspace }}/package-lock.json
      #       ${{ github.workspace }}/package.json
      #     key: ${{ runner.os }}-${{ github.run_id }}

  # grading-json-file:
  #   name: "Exercício: Mural dos Estudantes"
  #   needs: setup
  #   runs-on: self-hosted
  #   strategy:
  #     matrix: 
  #       test: [ "T1", "T2", "T3" ]

  #   steps:
  #     - name: Carregando cache do projeto
  #       uses: actions/cache@v2
  #       with:
  #         path: |
  #           ${{ env.JEKYLL_PATH }}/
  #           ${{ github.workspace }}/tests/
  #           ${{ github.workspace }}/node_modules/
  #           ${{ github.workspace }}/package-lock.json
  #           ${{ github.workspace }}/package.json
  #         key: ${{ runner.os }}-${{ github.run_id }}

  #     - name: "${{ matrix.test }}"
  #       if: ${{ always() }}
  #       run: npm test -- -t "${{ matrix.test }}"
